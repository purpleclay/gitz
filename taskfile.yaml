version: "3"

vars:
  GOLANG_DAGGER: "github.com/purpleclay/daggerverse/golang"

tasks:
  default:
    desc: Runs all of the default tasks
    cmds:
      - task: ci

  ci:
    desc: Run all CI tasks
    cmds:
      - task: deps
      - task: unit-test
      - task: lint

  deps:
    desc: Install all dependencies
    cmds:
      - go mod tidy

  test:
    desc: Run all of the tests
    cmds:
      - task: unit-test
      - task: docker-test

  unit-test:
    desc: Run the unit tests
    cmds:
      - dagger call -m {{.GOLANG_DAGGER}} --src . test

  docker-test:
    desc: Run the docker-based tests
    cmds:
      - docker build . -t gitz-test:latest -f testdata/Dockerfile --build-arg test=tagsigned
      - docker build . -t gitz-test:latest -f testdata/Dockerfile --build-arg test=tagsigningkey
      - docker build . -t gitz-test:latest -f testdata/Dockerfile --build-arg test=commitsigned
      - docker build . -t gitz-test:latest -f testdata/Dockerfile --build-arg test=commitsigningkey
      - docker build . -t gitz-test:latest -f testdata/Dockerfile --build-arg test=showcommit

  lint:
    desc: Lint the code using golangci-lint
    vars:
      REPORT_FORMAT: '{{default "colored-line-number" .REPORT_FORMAT}}'
    cmds:
      - dagger call -m {{.GOLANG_DAGGER}} --src . lint --format {{.REPORT_FORMAT}}

  format:
    desc: Format the code using gofumpt
    cmds:
      - dagger call -m {{.GOLANG_DAGGER}} --src . format export --path .

  docs:
    desc: Builds and hosts the MkDocs documentation
    vars:
      MKDOCS_MATERIAL_VERSION: '{{default "9.5.26-insiders-4.53.11" .MKDOCS_MATERIAL_VERSION}}'
    cmds:
      - docker run --rm -it -p 8000:8000 -v $PWD:/docs ghcr.io/purpleclay/mkdocs-material-insiders:{{.MKDOCS_MATERIAL_VERSION}}
