# syntax = docker/dockerfile:1.12
FROM golang:1.22-alpine3.18 AS build

WORKDIR /work
COPY . /work

ARG test

WORKDIR /work/testdata
COPY <<-EOF go.mod
module ${test}

go 1.19

replace github.com/purpleclay/gitz => ../

require (
	golang.org/x/sync v0.1.0 // indirect
	golang.org/x/sys v0.6.0 // indirect
	golang.org/x/term v0.5.0 // indirect
	mvdan.cc/sh/v3 v3.7.0 // indirect
)
EOF

RUN <<EOF
go get
CGO_ENABLED=0 go build -o gitz-test ${test}.go
EOF

FROM alpine:3.21
RUN apk add --no-cache git gnupg

RUN <<EOF
echo "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkdSYW9XNEJFQUNwRmJtMnMrUGVOeFJIaDNYRndCQWtHZGk4dU04MExFaTRrZkpMS05UZTR1SFcxRWQxCm9WcTI3NDQybEdtUHRlVmVhRGNTcExRRDZrRHZkcTZOeFFaRDJYWXlCZnpENmdUYmRJRHQ2RWpnNFg0NFFnQnUKUVpOOVR3bTZWSWpjR2NsQVdkemxFUFR3cmNST2U2WXVReVBwcmowbUFpanpRTE8xWjhtK05KeEE4eThJTERBYQp6VU1DMmFDbjRzbkRBQmZPYnRHZFdLVjNZQy9qbktHK1QrV3ZIMjFtNE1OT2dwLzN6MlJTWEM2ZmJ0OVNlcGtGCnlCb1I0aTdlODlHZVU2bWt0UzdSbWRoT1RjWStoYkRZelA5TnZHOElESGRwdFFVWFF0UmxOb3FCQy9NMzhrRlUKMWNQTSs2Y3hmL1ZDeFJST3lVUm9MM0pESWJ5SW05SUIxWll1UEUwTm1jNWp5TGp2Y0tPN1BYNVhiMFppQUMyMQpaOHRZUTkrZDEzcmROcTQvR1AzK1JsWDRoaldqdkRZazdWQWtNVTNuQUd1ZEZrQ3FyWFh5Rkd4WGlqUklBVGZKCkRtZW1KK2hUdmpSNTkxS1pZTE5zV2psVjMxaWU5R1pTYlhiQUdTNXRpVDAxWk0rNDE4bFE3bWV6a3JTSFJwTmMKaVhIc0Mwb3BPQUhva2ltNURDVDdobmlnZ1N6SWdEb1hnWkRFRERCNVNYN25EMCszL0VxdEVjSS9hSlkyUHZTRApRdlJuOTVOVFZtdmVMRDcxc3BDTUppdmlOSGVSKy9VZzUwa1JQdWpMUUtpalBpQW5TM0wvZmIwSGEyVHJFYWlTClU5YmdGUDVCZWp2VTVTRFRIMzNCeVpTYXZKaUlyVU1SanowdWJ1WEpnMEk4Vi9rTVk2SWJmSWxVclFBUkFRQUIKdEJaaVlYUnRZVzRnUEdKaGRHMWhia0JrWXk1amIyMCtpUUpPQkJNQkNBQTRGaUVFSkJNVjNhdG9aUllzQTRtLwo1VGlhRUhuVnBTOEZBbVJhb1c0Q0d3TUZDd2tJQndJR0ZRb0pDQXNDQkJZQ0F3RUNIZ0VDRjRBQUNna1E1VGlhCkVIblZwUy9NVHhBQWh0STNTZG5ncXdUaXhxNUhKRXNLZjN3WFV0Y1hQc09XaS9uK0RkUzNZNS93ZHZ6TnMyblgKcHgxWGRncmpEc0l4dlN3Wm9CQ2VnY2FsVVR5VjBkV2hrMUx2dGdwVFo5M3JINlhjNldYTUtmNU9pd2tBMEcraQpPVVlLbldKSm55Tld0bS9yRU96b0t3Nk4zMk93dlAxemJ0R2taVnNaWHNGVTkzOEdzUkczdGFzejI5anBzSm1yCkdFSFVwcXpBeGZQWUlSQUdUM2ViV3dLanZWdVBqRHhUZzNvVUkyaHNYdndsOWZidFp1cG93MllNL3pieVFwb24KL2VBYnB3ZDBteldnNGFLNGh6c0QrUmlEdmw0YkZtU3AyZUdDbzNnekcrYk5mRGtUYng2NWtmcXBMa0lMWEg0UQo1alRzcUpQaGgrRUpNWDlVbkl3MUIzczZLeVZmZmdXVHptQ0dlMlZ6TzcxQTVVZ1JHZ1ZFa0w2MldOdUdFZXBaCktYeUJaY1ptN1RndWRPZjB2OEVEcWNkUEw4UU8vbTF0eHRUanVCQ3cwci83Qk1pQmNUbUVCeHJlZ2xFbCtFY24KbTRtN2NiWmtKcjRuRk9iUHovYWxDR0VpVlROK2o1K0xNQ1pOVkFza3Q3YW5ZQUo2Q2RLOFUzYjZLb1dNT1JCYwpqTnB6OFhNcG9OMG1LYjRSeDZnTHZFWUlZNUpNMmc3UEFRQnQwV3hIYThVWHFrL0JSc0huazBTazFmcmFUT0JNCkg4MmZDWkRQUUFXdkZtQjNRWUlhSTFDQzBYcGRON0cwZUhUUkNJRkFvNkhjeGZXZ3BkR2tUNnRtcGtBbGMvTVAKaUxNVGV0NFhBbitrbVhqcnJ1MWdwdmM1U0pJaGhYcmJSZ1c3Vzk3eFAvazdETFNzdGhyZlRSZTVBZzBFWkZxaApiZ0VRQUt6cDNRY0NJWWtHVDdSQXY4YUl0L09BalRxRU5RaXBocGRTSTZROXFrL3lHRURGQVRaSFlQdEhZN1M3CmRGMHFJQ2w4UWxZb2hRWDgwWUFTYlJCRWpqT2FZSnVUaTVEaW8rUmxDU2hKd2h4QThRSXNYNVF0ekhCNCtpQkQKTzFZeXdTNlRuSEZETlRrbThtVkpXS3pZWlBWK2NHbHVlV3VHMnB4QmYyd1dwbzYrZVdWTUQzQVhBU0svbHFzNgpKSkxSazROVWJudnJ5T3o0UTZuZDE0ckw5VzM1ZWp5dzQzV1FBQzBiWUsrOUtCVUpKOWhFdVpOR0V5c3NyeGdMCjl4L0RPaFhzM0V1Uk1NMFZXR0JJV1p1SEN0WFNMUHNISmVBQjBJQWE3RG9yeUFLYjcwQytTTHZLcS9ITC8rZHUKQ0R6QlFNcFdBa2JtaHpoelQwS1BIcDI5ZDVRUGtnWG9yYVVCYXZ4TW0yWlo3UTU2bFF0bVRJUGNhZ1AwTmFVNApRZUhMeHYxTXNBNHpiMUVvK1VsbkRZcFVNelZhYnpHTXhTTTRaZmFBNW0vUUVqVkJzMUpVREZmK3JPNVc4ZkNJClltdEoyUjkyRkZUVnFETEJJYUVxeU5FME1pMWk4ZUpUVHJlRERRVm90MFMvam52K2xFUTErR3pISnVMOVh2THkKaXdrR0hVVWJtbXpYWHhqdkgxQWtjL1luaUxBVkZrT2Y1WE96OVlkdGdiN2xobGZkZ21IcWtuVS9aN3J2bXpBUwpHWHNZYnk3TXkxNG8ySEZZWTcyQy9UcmVHOWZIYnhlRU1DT0NwOEsxNXhmVjRnMXhheWVaVSt6YWgxN21ySVIrCnEyam5Vc2xKL1dROTBUSzM2Snh0eWZRNHR0UXdCdEhqOEo5aXdRVE94MkNPMnZUeEFCRUJBQUdKQWpZRUdBRUkKQUNBV0lRUWtFeFhkcTJobEZpd0RpYi9sT0pvUWVkV2xMd1VDWkZxaGJnSWJEQUFLQ1JEbE9Kb1FlZFdsTDBTdwpELzBheUFocStEZUFKT3dYekY0MGx2NUNMSkxhOEhjRTBPb2J0S3l0TldxZU5mQjlaK2czRDU4b1FVYnJxcE9xCnQzZkJ2SnZHWWpxMmVWWkdidkRZY2w4Q1lQN0pZb1ZUV25sTzNPUFdDSS9yZXY2RS9UaEo4WmVLS294WDY0NFYKRGZNU1pjS01jRlVoUGNjaE1XVTh4VHVoYWRod0JJZ0FEdFQ0QmJuWnEzeENVeExhaFNUbDA2SDVzbGk1c0J4ZQpNVjBJMlhraVdoZkpIZW1BQ2tDT3p1cVFQaW9hZmV6ZzRyNVJMbXpBR2Y3QUViZUhId1FLTGtqQjJXMU8xWHFECmxqUi96ekpkS1pRR1lHM0NFa1VoME1iYkt6aEZmdHlFYXQ3NmVsN05zdlJSOFJuYU5KRHQ3QURXRkwvSHM1VzAKaXdZWEM1bERoT2lrd1Q2ei94clVuYm15MCt5VEdpLzhWQ2FDaHZCd2I4UmNYWnM0K3VKT1pjbUIvbHhFTmJJRAppNEpEK0p3R0t2WHh1ckdlQThqQmsvcmR4ZUdmd3JzS0FWNFBaT1Y3WmtlRThBK2syZk5tMjMyWVBQbWRNVk5HCk5ZTzJRSWQwT25kRHZwa011Uk1wSldoSGNaR1VzakVsQ2x3bDJBbWpacnpEYXI5RkdTKzd4cW1odUtaUktLVS8KWHpTWmxUSCtORDdiRVdSejVKQVh2R2VZb3NJZ29sbTB6dHRrSVUvclZyUTh4Z3B5bEhuRVdWOExkOFhuU0Z5VgpLUVpwbHpSVzZlZU5TTGlMbVVaV3ZDV0psZDE3ZFgvVDk3UXJ2d0loUVNZNGZVRDNwc0NlK21kclNrL0duWXJHClV3T0Zwemk0eHY4UEdaTHFMSEszNU5abk9zbVFuOHRoakprZVZ2Y1FYUUYrY3c9PQo9ZUVlcgotLS0tLUVORCBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCg==" | base64 -di | gpg --batch --import
echo "" | base64 -di | gpg --batch --import
echo "241315DDAB6865162C0389BFE5389A1079D5A52F:6:" | gpg --import-ownertrust
EOF

ENV GPG_PUBLIC_KEY_ID=E5389A1079D5A52F
ENV GPG_FINGERPRINT=241315DDAB6865162C0389BFE5389A1079D5A52F

WORKDIR /work
RUN <<EOF
git init --bare --initial-branch main testing.git
git clone file://$(pwd)/testing.git testing
cd testing
git config --add user.name batman
git config --add user.email batman@dc.com
git commit --allow-empty -m "initialize repository"
git push origin main
git remote set-head origin --auto
EOF

WORKDIR /work/testing
COPY --from=build /work/testdata/gitz-test /usr/bin/gitz-test
RUN gitz-test
